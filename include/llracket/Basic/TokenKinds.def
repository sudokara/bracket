#ifndef TOK
#define TOK(ID)
#endif
#ifndef PUNCTUATOR
#define PUNCTUATOR(ID, SP) TOK(ID)
#endif
#ifndef KEYWORD
#define KEYWORD(ID, FLAG) TOK(kw_##ID)
#endif

TOK(unknown)
TOK(eof)
TOK(integer_literal)
TOK(identifier)
TOK(boolean_literal)
TOK(void_literal)

// punctuators
PUNCTUATOR(l_paren, "(")
PUNCTUATOR(r_paren, ")")
PUNCTUATOR(l_square, "[")
PUNCTUATOR(r_square, "]")
PUNCTUATOR(plus, "+")
PUNCTUATOR(minus, "-")
PUNCTUATOR(read, "read")
PUNCTUATOR(setbang, "set!")
PUNCTUATOR(begin, "begin")
PUNCTUATOR(whileloop, "while")
PUNCTUATOR(vector, "vector")
PUNCTUATOR(vector_ref, "vector-ref")
PUNCTUATOR(vector_length, "vector-length") 
PUNCTUATOR(vector_set, "vector-set!")
PUNCTUATOR(define, "define")
PUNCTUATOR(colon, ":")
PUNCTUATOR(arrow, "->")

// comparisons
PUNCTUATOR(eq, "eq?")
PUNCTUATOR(lt, "<")
PUNCTUATOR(gt, ">")
PUNCTUATOR(le, "<=")
PUNCTUATOR(ge, ">=")

// logical operators
// these are punctuators because its an operator
// like arithmetic and relational operators
PUNCTUATOR(logical_and, "and")
PUNCTUATOR(logical_or, "or")
PUNCTUATOR(logical_not, "not")


// Keywords with feature flags
KEYWORD(LET, KEYALL)
KEYWORD(IF, KEYALL)
KEYWORD(VOID, KEYALL)
KEYWORD(VOIDTYPE, KEYALL)
KEYWORD(INTEGERTYPE, KEYALL)
KEYWORD(BOOLEANTYPE, KEYALL)
KEYWORD(VECTORTYPE, KEYALL)

#undef KEYWORD
#undef PUNCTUATOR
#undef TOK
